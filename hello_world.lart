typedef i64 = integer<64, true>;
typedef u64 = integer<64, false>;
typedef u8 = integer<8, false>;

typedef string = struct {
  data: &u8,
  length: u64
};

fn printf_str(str: &u8, s: &u8);
fn strlen(str: &u8) -> u64;
fn malloc(size: u64) -> &void;
fn free(ptr: &void);

fn string__print(s: &string) {
  printf_str("s->data = %s;\n", s->data);
}

fn string__new(str: &u8) -> &string {
  let s: &string;
  s = malloc(sizeof<string>);
  s->data = str;
  s->length = strlen(s->data);
  return s;
}

fn string__delete(s: &string) {
  free(s);
}

fn main() -> i64 {
  let A: &string;
  A = string__new("less gooo");
  string__print(A);
  string__delete(A);
  A = nullptr;
  return 0;
}
